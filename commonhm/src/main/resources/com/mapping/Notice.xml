<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.huangmei.commonhm.dao.NoticeDao">

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.huangmei.commonhm.model.Notice">
		INSERT INTO TB_NOTICE (
			ID, CONTENT, CREATE_TIME, USER_ID
		) VALUES (
			#{id}, #{content}, #{createTime}, #{userId}
		)
	</insert>

    <delete id="delete" parameterType="com.huangmei.commonhm.model.Notice">
        DELETE FROM TB_NOTICE
        <include refid="CriteriaSQL"/>
    </delete>

    <update id="update" parameterType="com.huangmei.commonhm.model.Notice">
        UPDATE TB_NOTICE
        <include refid="SetSQL"/>
        <include refid="CriteriaSQL"/>
    </update>

    <select id="selectCount" parameterType="com.huangmei.commonhm.model.Notice" resultType="_long">
        SELECT COUNT(1) FROM TB_NOTICE
        <include refid="CriteriaSQL"/>
    </select>

    <select id="selectList" parameterType="com.huangmei.commonhm.model.Notice" resultMap="NoticeResultMap">
        SELECT * FROM TB_NOTICE
        <include refid="CriteriaSQL"/>
        <include refid="OrderbySQL"/>
        <include refid="LimitSQL"/>
    </select>

    <resultMap id="NoticeResultMap" type="com.huangmei.commonhm.model.Notice">
        <id property="id" column="ID"/>
        <result property="content" column="CONTENT"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="userId" column="USER_ID"/>
    </resultMap>

    <sql id="SetSQL">
        <set>
            <if test="entity.content != null">CONTENT = #{entity.content},</if>
            <if test="entity.createTime != null">CREATE_TIME = #{entity.createTime},</if>
            <if test="entity.userId != null">USER_ID = #{entity.userId},</if>
        </set>
    </sql>

    <sql id="CriteriaSQL">
        <where>
            <if test="criteria != null and criteria.notEmpty">
                <foreach collection="criteria.criterions" item="criterion">
                    <choose>
                        <when test="criterion.noValue">
                            and ${criterion.field} ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                            and ${criterion.field} ${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                            and ${criterion.field} ${criterion.condition} #{criterion.value} and #{criterion.value2}
                        </when>
                        <when test="criterion.listValue">
                            and ${criterion.field} ${criterion.condition}
                            <foreach collection="criterion.value" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </when>
                    </choose>
                </foreach>
            </if>
        </where>
    </sql>

    <sql id="OrderbySQL">
        <if test="criteria != null and criteria.orderly">
            ORDER BY
            <foreach collection="criteria.orderbies" item="orderby" separator=",">
                ${orderby.field} ${orderby.value}
            </foreach>
        </if>
    </sql>

    <sql id="LimitSQL">
        <if test="criteria != null and criteria.pagination">
            LIMIT #{criteria.limit.value}, #{criteria.limit.value2}
        </if>
    </sql>

</mapper>